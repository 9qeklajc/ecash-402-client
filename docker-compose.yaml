services:
  otrta-ui:
    container_name: otrta-ui
    build:
      context: ui
    environment:
      - NEXT_PUBLIC_API_URL=http://otrta-rust:3333
    networks:
      - otrta-network
    ports:
      - 3332:3000
    restart: unless-stopped

  otrta-rust:
    container_name: otrta-rust
    build:
      context: crates
      dockerfile: Dockerfile.client
    environment:
      # Runtime Environment
      - RUST_LOG=debug
      - APP_ENVIRONMENT=production

      - APP_APPLICATION__PORT=3333
      - APP_APPLICATION__HOST=0.0.0.0
      - APP_APPLICATION__MINT_URL=https://ecashmint.otrta.me
      - APP_APPLICATION__DEFAULT_MSATS_PER_REQUEST=65536

      - APP_DATABASE__HOST=otrta-db
      - APP_DATABASE__PORT=5432
      - APP_DATABASE__USERNAME=postgres
      - APP_DATABASE__PASSWORD=postgres
      - APP_DATABASE__DATABASE_NAME=otrta
      - APP_DATABASE__REQUIRE_SSL=false
      - APP_DATABASE__CONNECTIONS=10
    env_file:
      - .env
    ports:
      - 3333:3333
    networks:
      - otrta-network
    volumes:
      - backend_cache:/code/target
    # extra_hosts:
    #   - 'host.docker.internal:host-gateway'
    depends_on:
      - otrta-db
    restart: unless-stopped

  otrta-db:
    container_name: otrta-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=otrta
    networks:
      - otrta-network
    ports:
      - 5436:5432
    volumes:
      - otrt_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d otrta"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  otrta-network:
    external: true

volumes:
  backend_cache: {}
  otrt_db_data: {}
